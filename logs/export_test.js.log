    @exportable:__stack_pointer

    @exportable:fib2

    @exportable:fib

out is:     @exportable:__stack_pointer

    @exportable:fib2

    @exportable:fib

exportableNames is: [ "__stack_pointer", "fib2", "fib" ]
### Exports

__stack_pointer

fib2

fib



### Globals(import)

 0: __stack_pointer (2)

### Globals(data)

### Globals(bss)

### Functions

 0: fib2

 1: fib



### Memory  0x1

---- BSS  0x1

### Functions

 0: __wasm_call_ctors

 1: fib2

 2: fib

### Globals

 0: __stack_pointer

### Data

### Exports

__stack_pointer

fib2

fib



### Globals(import)

 0: __stack_pointer (2)

### Globals(data)

### Globals(bss)

### Functions

 0: fib2

 1: fib



### Memory  0x1

---- BSS  0x1

### Functions

 0: __wasm_call_ctors

 1: fib2

 2: fib

### Globals

 0: __stack_pointer

### Data

compiledWasm is: (module
;; WASM version: 1

;;=== 0x8: TYPE, len=9
(type (func))  ;; 0
(type (func (param i32) (result i32)))  ;; 1

;;=== 0x13: FUNC, len=4
;; func: #3
;;   func 0: type=#0
;;   func 1: type=#1
;;   func 2: type=#1

;;=== 0x19: MEMORY, len=3
(memory 1)

;;=== 0x1e: GLOBAL, len=8
(global (;0;) (mut i32) (i32.const 8192))

;;=== 0x28: EXPORT, len=41
(export "__stack_pointer" (global 0))
(export "fib2" (func 1))
(export "fib" (func 2))
(export "memory" (memory 0))

;;=== 0x53: CODE, len=78
(func (;0;) (type 0)
)
(func $fib2 (;1;) (type 1)
  local.get 0
  i32.const 1
  i32.le_s
  if (result i32)
    local.get 0
  else
    local.get 0
    i32.const 1
    i32.sub
    call $fib
    local.get 0
    i32.const 2
    i32.sub
    call $fib
    i32.add
  end
)
(func $fib (;2;) (type 1)
  local.get 0
  i32.const 2
  i32.lt_s
  if (result i32)
    local.get 0
  else
    local.get 0
    i32.const 1
    i32.sub
    call $fib
    local.get 0
    i32.const 2
    i32.sub
    call $fib
    i32.add
  end
)

;;=== 0xa3: DATA, len=1
)
exports.fib is: [Function: 2]
exports.fib(20) is: 6765
exports.fib2(20) is: 6765
[Object: null prototype] {
  __stack_pointer: Global [WebAssembly.Global] {},
  fib2: [Function: 1],
  fib: [Function: 2],
  memory: Memory [WebAssembly.Memory] {}
}
