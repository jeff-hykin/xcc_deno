export default new Map(
    [Function, {
        "length": {
            "value": 1,
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "name": {
            "value": "Function",
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "prototype": {
            "value": Function.prototype,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
    }],
    [Function.prototype, {
        "length": {
            "value": 0,
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "name": {
            "value": "",
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "arguments": {
            "get": (function () { [native code] }),
            "set": (function () { [native code] }),
            "enumerable": false,
            "configurable": true,
        },
        "caller": {
            "get": (function () { [native code] }),
            "set": (function () { [native code] }),
            "enumerable": false,
            "configurable": true,
        },
        "constructor": {
            "value": Function,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "apply": {
            "value": apply /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "bind": {
            "value": bind /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "call": {
            "value": call /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toString": {
            "value": toString /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
    }],
    [Object, {
        "length": {
            "value": 1,
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "name": {
            "value": "Object",
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "prototype": {
            "value": Object.prototype,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "assign": {
            "value": assign /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "getOwnPropertyDescriptor": {
            "value": getOwnPropertyDescriptor /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "getOwnPropertyDescriptors": {
            "value": getOwnPropertyDescriptors /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "getOwnPropertyNames": {
            "value": getOwnPropertyNames /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "getOwnPropertySymbols": {
            "value": getOwnPropertySymbols /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "hasOwn": {
            "value": hasOwn /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "is": {
            "value": is /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "preventExtensions": {
            "value": preventExtensions /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "seal": {
            "value": seal /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "create": {
            "value": create /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "defineProperties": {
            "value": defineProperties /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "defineProperty": {
            "value": defineProperty /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "freeze": {
            "value": freeze /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "getPrototypeOf": {
            "value": getPrototypeOf /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "setPrototypeOf": {
            "value": setPrototypeOf /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "isExtensible": {
            "value": isExtensible /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "isFrozen": {
            "value": isFrozen /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "isSealed": {
            "value": isSealed /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "keys": {
            "value": keys /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "entries": {
            "value": entries /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "fromEntries": {
            "value": fromEntries /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "values": {
            "value": values /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "groupBy": {
            "value": groupBy /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
    }],
    [Object.prototype, {
        "constructor": {
            "value": Object,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "__defineGetter__": {
            "value": globalThis["__defineGetter__"],
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "__defineSetter__": {
            "value": globalThis["__defineSetter__"],
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "hasOwnProperty": {
            "value": hasOwnProperty,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "__lookupGetter__": {
            "value": globalThis["__lookupGetter__"],
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "__lookupSetter__": {
            "value": globalThis["__lookupSetter__"],
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "isPrototypeOf": {
            "value": isPrototypeOf,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "propertyIsEnumerable": {
            "value": propertyIsEnumerable,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toString": {
            "value": toString,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "valueOf": {
            "value": valueOf,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toLocaleString": {
            "value": toLocaleString,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
    }],
    [Boolean, {
        "length": {
            "value": 1,
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "name": {
            "value": "Boolean",
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "prototype": {
            "value": Boolean.prototype,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
    }],
    [Boolean.prototype, {
        "constructor": {
            "value": Boolean,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toString": {
            "value": toString /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "valueOf": {
            "value": valueOf /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
    }],
    [Number, {
        "length": {
            "value": 1,
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "name": {
            "value": "Number",
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "prototype": {
            "value": Number.prototype,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "isFinite": {
            "value": isFinite /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "isInteger": {
            "value": isInteger /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "isNaN": {
            "value": isNaN /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "isSafeInteger": {
            "value": isSafeInteger /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "parseFloat": {
            "value": parseFloat,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "parseInt": {
            "value": parseInt,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "MAX_VALUE": {
            "value": 1.7976931348623157e+308,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "MIN_VALUE": {
            "value": 5e-324,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "NaN": {
            "value": NaN,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "NEGATIVE_INFINITY": {
            "value": -Infinity,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "POSITIVE_INFINITY": {
            "value": Infinity,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "MAX_SAFE_INTEGER": {
            "value": 9007199254740991,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "MIN_SAFE_INTEGER": {
            "value": -9007199254740991,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "EPSILON": {
            "value": 2.220446049250313e-16,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
    }],
    [Number.prototype, {
        "constructor": {
            "value": Number,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toExponential": {
            "value": toExponential /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toFixed": {
            "value": toFixed /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toPrecision": {
            "value": toPrecision /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toString": {
            "value": toString /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "valueOf": {
            "value": valueOf /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toLocaleString": {
            "value": toLocaleString /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
    }],
    [String, {
        "length": {
            "value": 1,
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "name": {
            "value": "String",
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "prototype": {
            "value": String.prototype,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "fromCharCode": {
            "value": fromCharCode /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "fromCodePoint": {
            "value": fromCodePoint /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "raw": {
            "value": raw /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
    }],
    [String.prototype, {
        "length": {
            "value": 0,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "constructor": {
            "value": String,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "anchor": {
            "value": anchor /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "at": {
            "value": at /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "big": {
            "value": big /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "blink": {
            "value": blink /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "bold": {
            "value": bold /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "charAt": {
            "value": charAt /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "charCodeAt": {
            "value": charCodeAt /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "codePointAt": {
            "value": codePointAt /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "concat": {
            "value": concat /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "endsWith": {
            "value": endsWith /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "fontcolor": {
            "value": fontcolor /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "fontsize": {
            "value": fontsize /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "fixed": {
            "value": fixed /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "includes": {
            "value": includes /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "indexOf": {
            "value": indexOf /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "isWellFormed": {
            "value": isWellFormed /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "italics": {
            "value": italics /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "lastIndexOf": {
            "value": lastIndexOf /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "link": {
            "value": link /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "localeCompare": {
            "value": localeCompare /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "match": {
            "value": match /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "matchAll": {
            "value": matchAll /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "normalize": {
            "value": normalize /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "padEnd": {
            "value": padEnd /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "padStart": {
            "value": padStart /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "repeat": {
            "value": repeat /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "replace": {
            "value": replace /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "replaceAll": {
            "value": replaceAll /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "search": {
            "value": search /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "slice": {
            "value": slice /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "small": {
            "value": small /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "split": {
            "value": split /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "strike": {
            "value": strike /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "sub": {
            "value": sub /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "substr": {
            "value": substr /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "substring": {
            "value": substring /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "sup": {
            "value": sup /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "startsWith": {
            "value": startsWith /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toString": {
            "value": toString /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toWellFormed": {
            "value": toWellFormed /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "trim": {
            "value": trim /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "trimStart": {
            "value": trimStart /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "trimLeft": {
            "value": trimStart /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "trimEnd": {
            "value": trimEnd /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "trimRight": {
            "value": trimEnd /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toLocaleLowerCase": {
            "value": toLocaleLowerCase /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toLocaleUpperCase": {
            "value": toLocaleUpperCase /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toLowerCase": {
            "value": toLowerCase /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toUpperCase": {
            "value": toUpperCase /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "valueOf": {
            "value": valueOf /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
    }],
    [Array, {
        "length": {
            "value": 1,
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "name": {
            "value": "Array",
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "prototype": {
            "value": Array.prototype,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "isArray": {
            "value": isArray /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "from": {
            "value": from /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "fromAsync": {
            "value": fromAsync /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "of": {
            "value": of /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
    }],
    [Array.prototype, {
        "length": {
            "value": 0,
            "writable": true,
            "enumerable": false,
            "configurable": false,
        },
        "constructor": {
            "value": Array,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "at": {
            "value": at /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "concat": {
            "value": concat /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "copyWithin": {
            "value": copyWithin /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "fill": {
            "value": fill /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "find": {
            "value": find /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "findIndex": {
            "value": findIndex /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "findLast": {
            "value": findLast /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "findLastIndex": {
            "value": findLastIndex /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "lastIndexOf": {
            "value": lastIndexOf /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "pop": {
            "value": pop /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "push": {
            "value": push /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "reverse": {
            "value": reverse /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "shift": {
            "value": shift /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "unshift": {
            "value": unshift /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "slice": {
            "value": slice /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "sort": {
            "value": sort /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "splice": {
            "value": splice /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "includes": {
            "value": includes /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "indexOf": {
            "value": indexOf /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "join": {
            "value": join /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "keys": {
            "value": keys /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "entries": {
            "value": entries /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "values": {
            "value": values /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "forEach": {
            "value": forEach /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "filter": {
            "value": filter /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "flat": {
            "value": flat /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "flatMap": {
            "value": flatMap /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "map": {
            "value": map /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "every": {
            "value": every /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "some": {
            "value": some /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "reduce": {
            "value": reduce /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "reduceRight": {
            "value": reduceRight /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toReversed": {
            "value": toReversed /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toSorted": {
            "value": toSorted /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toSpliced": {
            "value": toSpliced /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "with": {
            "value": with /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toLocaleString": {
            "value": toLocaleString /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toString": {
            "value": toString /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
    }],
    [RegExp, {
        "length": {
            "value": 2,
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "name": {
            "value": "RegExp",
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "prototype": {
            "value": RegExp.prototype,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "input": {
            "get": get input /*native function*/,
            "set": set input /*native function*/,
            "enumerable": false,
            "configurable": true,
        },
        "$_": {
            "get": get $_ /*native function*/,
            "set": set $_ /*native function*/,
            "enumerable": false,
            "configurable": true,
        },
        "lastMatch": {
            "get": get lastMatch /*native function*/,
            "set": set lastMatch /*native function*/,
            "enumerable": false,
            "configurable": true,
        },
        "$&": {
            "get": get $& /*native function*/,
            "set": set $& /*native function*/,
            "enumerable": false,
            "configurable": true,
        },
        "lastParen": {
            "get": get lastParen /*native function*/,
            "set": set lastParen /*native function*/,
            "enumerable": false,
            "configurable": true,
        },
        "$+": {
            "get": get $+ /*native function*/,
            "set": set $+ /*native function*/,
            "enumerable": false,
            "configurable": true,
        },
        "leftContext": {
            "get": get leftContext /*native function*/,
            "set": set leftContext /*native function*/,
            "enumerable": false,
            "configurable": true,
        },
        "$`": {
            "get": get $` /*native function*/,
            "set": set $` /*native function*/,
            "enumerable": false,
            "configurable": true,
        },
        "rightContext": {
            "get": get rightContext /*native function*/,
            "set": set rightContext /*native function*/,
            "enumerable": false,
            "configurable": true,
        },
        "$'": {
            "get": get $' /*native function*/,
            "set": set $' /*native function*/,
            "enumerable": false,
            "configurable": true,
        },
        "$1": {
            "get": get $1 /*native function*/,
            "set": set $1 /*native function*/,
            "enumerable": false,
            "configurable": true,
        },
        "$2": {
            "get": get $2 /*native function*/,
            "set": set $2 /*native function*/,
            "enumerable": false,
            "configurable": true,
        },
        "$3": {
            "get": get $3 /*native function*/,
            "set": set $3 /*native function*/,
            "enumerable": false,
            "configurable": true,
        },
        "$4": {
            "get": get $4 /*native function*/,
            "set": set $4 /*native function*/,
            "enumerable": false,
            "configurable": true,
        },
        "$5": {
            "get": get $5 /*native function*/,
            "set": set $5 /*native function*/,
            "enumerable": false,
            "configurable": true,
        },
        "$6": {
            "get": get $6 /*native function*/,
            "set": set $6 /*native function*/,
            "enumerable": false,
            "configurable": true,
        },
        "$7": {
            "get": get $7 /*native function*/,
            "set": set $7 /*native function*/,
            "enumerable": false,
            "configurable": true,
        },
        "$8": {
            "get": get $8 /*native function*/,
            "set": set $8 /*native function*/,
            "enumerable": false,
            "configurable": true,
        },
        "$9": {
            "get": get $9 /*native function*/,
            "set": set $9 /*native function*/,
            "enumerable": false,
            "configurable": true,
        },
    }],
    [RegExp.prototype, {
        "constructor": {
            "value": RegExp,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "exec": {
            "value": (function (...args) {
                if (this[regexpProxy]) {
                    return realExec.apply(this[regexpProxy], args)
                }
                return realExec.apply(this, args)
            }),
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "dotAll": {
            "get": get dotAll /*native function*/,
            "set": undefined,
            "enumerable": false,
            "configurable": true,
        },
        "flags": {
            "get": get flags /*native function*/,
            "set": undefined,
            "enumerable": false,
            "configurable": true,
        },
        "global": {
            "get": get global /*native function*/,
            "set": undefined,
            "enumerable": false,
            "configurable": true,
        },
        "hasIndices": {
            "get": get hasIndices /*native function*/,
            "set": undefined,
            "enumerable": false,
            "configurable": true,
        },
        "ignoreCase": {
            "get": get ignoreCase /*native function*/,
            "set": undefined,
            "enumerable": false,
            "configurable": true,
        },
        "multiline": {
            "get": get multiline /*native function*/,
            "set": undefined,
            "enumerable": false,
            "configurable": true,
        },
        "source": {
            "get": get source /*native function*/,
            "set": undefined,
            "enumerable": false,
            "configurable": true,
        },
        "sticky": {
            "get": get sticky /*native function*/,
            "set": undefined,
            "enumerable": false,
            "configurable": true,
        },
        "unicode": {
            "get": get unicode /*native function*/,
            "set": undefined,
            "enumerable": false,
            "configurable": true,
        },
        "unicodeSets": {
            "get": get unicodeSets /*native function*/,
            "set": undefined,
            "enumerable": false,
            "configurable": true,
        },
        "compile": {
            "value": compile /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toString": {
            "value": toString /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "test": {
            "value": test /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
    }],
    [Symbol, {
        "length": {
            "value": 0,
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "name": {
            "value": "Symbol",
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "prototype": {
            "value": Symbol.prototype,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "for": {
            "value": for /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "keyFor": {
            "value": keyFor /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "asyncIterator": {
            "value": Symbol.asyncIterator,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "hasInstance": {
            "value": Symbol.hasInstance,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "isConcatSpreadable": {
            "value": Symbol.isConcatSpreadable,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "iterator": {
            "value": Symbol.iterator,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "match": {
            "value": Symbol.match,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "matchAll": {
            "value": Symbol.matchAll,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "replace": {
            "value": Symbol.replace,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "search": {
            "value": Symbol.search,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "species": {
            "value": Symbol.species,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "split": {
            "value": Symbol.split,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "toPrimitive": {
            "value": Symbol.toPrimitive,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "toStringTag": {
            "value": Symbol.toStringTag,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "unscopables": {
            "value": Symbol.unscopables,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "dispose": {
            "value": Symbol.dispose,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "asyncDispose": {
            "value": Symbol.asyncDispose,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "metadata": {
            "value": Symbol.metadata,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
    }],
    [Symbol.prototype, {
        "constructor": {
            "value": Symbol,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toString": {
            "value": toString /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "valueOf": {
            "value": valueOf /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "description": {
            "get": get description /*native function*/,
            "set": undefined,
            "enumerable": false,
            "configurable": true,
        },
    }],
    [Error, {
        "length": {
            "value": 1,
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "name": {
            "value": "Error",
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "prototype": {
            "value": Error.prototype,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "captureStackTrace": {
            "value": captureStackTrace /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "stackTraceLimit": {
            "value": 10,
            "writable": true,
            "enumerable": true,
            "configurable": true,
        },
    }],
    [Error.prototype, {
        "constructor": {
            "value": Error,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "name": {
            "value": "Error",
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "message": {
            "value": "",
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "toString": {
            "value": toString /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
    }],
    [Promise, {
        "length": {
            "value": 1,
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "name": {
            "value": "Promise",
            "writable": false,
            "enumerable": false,
            "configurable": true,
        },
        "prototype": {
            "value": Promise.prototype,
            "writable": false,
            "enumerable": false,
            "configurable": false,
        },
        "all": {
            "value": all /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "allSettled": {
            "value": allSettled /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "any": {
            "value": any /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "race": {
            "value": race /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "resolve": {
            "value": resolve /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "reject": {
            "value": reject /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "withResolvers": {
            "value": withResolvers /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "try": {
            "value": try /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
    }],
    [Promise.prototype, {
        "constructor": {
            "value": Promise,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "then": {
            "value": then /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "catch": {
            "value": catch /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
        "finally": {
            "value": finally /*native function*/,
            "writable": true,
            "enumerable": false,
            "configurable": true,
        },
    }],
)
